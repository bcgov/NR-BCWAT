images:
  airflow:
    repository: image-registry.openshift-image-registry.svc:5000/bcwat/airflow
    tag: latest
    pullPolicy: Always

airflow:

  ## the airflow executor type to use
  executor: KubernetesExecutor

  ## configs generating the `pod_template.yaml` file for `AIRFLOW__KUBERNETES__POD_TEMPLATE_FILE`
  ## [NOTE] the `dags.gitSync` values will create a git-sync init-container in the pod
  ## [NOTE] the `airflow.extraPipPackages` will NOT be installed
  kubernetesPodTemplate:
    ## the full content of the pod-template file (as a string)
    ## [NOTE] all other `kubernetesPodTemplate.*` are disabled when this is set
    stringOverride: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: placeholder-name
        labels:
          tier: airflow
          component: worker
          release: airflow
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      spec:
        initContainers: []
        containers:
          - name: base
            image: apache/airflow:2.10.5
            imagePullPolicy: IfNotPresent
            env:
              - name: AIRFLOW__CORE__EXECUTOR
                value: KubernetesExecutor
              - name: AIRFLOW__CORE__FERNET_KEY
                valueFrom:
                  secretKeyRef:
                    name: airflow-fernet-key
                    key: fernet-key
              - name: AIRFLOW_HOME
                value: /opt/airflow
              - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
                valueFrom:
                  secretKeyRef:
                    name: airflow-metadata-db-url
                    key: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
                valueFrom:
                  secretKeyRef:
                    name: airflow-metadata-db-url
                    key: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              - name: AIRFLOW_CONN_AIRFLOW_DB
                valueFrom:
                  secretKeyRef:
                    name: airflow-metadata-db-url
                    key: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              - name: AIRFLOW__WEBSERVER__SECRET_KEY
                valueFrom:
                  secretKeyRef:
                    name: airflow-webserver-secret-key
                    key: webserver-secret-key
              - name: AIRFLOW__KUBERNETES__LOGS_SERVICE_HOST
                value: airflow-webserver
              - name: AIRFLOW__KUBERNETES__LOGS_SERVICE_PORT
                value: "8793"
            volumeMounts:
              - mountPath: "/opt/airflow/logs"
                name: logs
              - name: config
                mountPath: "/opt/airflow/airflow.cfg"
                subPath: airflow.cfg
                readOnly: true
              - name: config
                mountPath: "/opt/airflow/config/airflow_local_settings.py"
                subPath: airflow_local_settings.py
                readOnly: true
        restartPolicy: Never
        terminationGracePeriodSeconds: 600
        tolerations: []
        topologySpreadConstraints: []
        serviceAccountName: airflow-worker
        volumes:
          - emptyDir: {}
            name: logs
          - configMap:
              name: airflow-config
            name: config

webserver:
  waitForMigrations:
    enabled: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  env:
    - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
      valueFrom:
        secretKeyRef:
          name: airflow-metadata-db-url
          key: AIRFLOW__CORE__SQL_ALCHEMY_CONN
    - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
      valueFrom:
        secretKeyRef:
          name: airflow-metadata-db-url
          key: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN

scheduler:
  waitForMigrations:
    enabled: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  env:
    - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
      valueFrom:
        secretKeyRef:
          name: airflow-metadata-db-url
          key: AIRFLOW__CORE__SQL_ALCHEMY_CONN
    - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
      valueFrom:
        secretKeyRef:
          name: airflow-metadata-db-url
          key: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN

triggerer:
  waitForMigrations:
    enabled: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  env:
    - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
      valueFrom:
        secretKeyRef:
          name: airflow-metadata-db-url
          key: AIRFLOW__CORE__SQL_ALCHEMY_CONN
    - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
      valueFrom:
        secretKeyRef:
          name: airflow-metadata-db-url
          key: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN

migrateDatabaseJob:
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  ttlSecondsAfterFinished: 180
  env:
    - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
      valueFrom:
        secretKeyRef:
          name: airflow-metadata-db-url
          key: AIRFLOW__CORE__SQL_ALCHEMY_CONN
    - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
      valueFrom:
        secretKeyRef:
          name: airflow-metadata-db-url
          key: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN

createUserJob:
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  ttlSecondsAfterFinished: 180
  env:
    - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
      valueFrom:
        secretKeyRef:
          name: airflow-metadata-db-url
          key: AIRFLOW__CORE__SQL_ALCHEMY_CONN
    - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
      valueFrom:
        secretKeyRef:
          name: airflow-metadata-db-url
          key: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
